name: Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 127.0.0.1:2375:2375
        env:
          DOCKER_HOST: tcp://localhost:2375
          DOCKER_TLS_VERIFY: 0

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Set up R environment
        uses: r-lib/actions/setup-r@v2

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r deployment/api/requirements.txt

      - name: Install R dependencies
        run: |
          Rscript -e 'install.packages("remotes")'
          Rscript -e 'remotes::install_deps()'
          Rscript deployment/api/packages.R

      - name: Build Docker image
        run: |
          docker build -t churn-prediction-api -f deployment/docker/Dockerfile .

      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin <AWS_ACCOUNT_ID>.dkr.ecr.us-west-2.amazonaws.com
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Push Docker image to ECR
        run: |
          docker tag churn-prediction-api:latest <AWS_ACCOUNT_ID>.dkr.ecr.us-west-2.amazonaws.com/churn-prediction-api:latest
          docker push <AWS_ACCOUNT_ID>.dkr.ecr.us-west-2.amazonaws.com/churn-prediction-api:latest

      - name: Deploy to AWS ECS
        run: |
          aws ecs update-service --cluster churn-prediction-cluster --service churn-prediction-service --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Notify deployment success
        run: echo "Deployment completed successfully."